@plugin './plugin.js';
// Colors Loop
.color-theme-loop(@ruleset) when (length( @colors ) >= 1) {

}
.color-loop(@ruleset) when (length( @colors ) >= 1) {

}

// RTL, LTR
.ltr(@ruleset) {
  & when not (@rtl) {
    @ruleset();
  }
}
.rtl(@ruleset) {
  & when (@rtl) {
    @ruleset();
  }
}

// iPhone X
.safe-areas(@ruleset) {
  &.device-iphone-x {
    @ruleset();
  }
}
.safe-areas-portrait(@ruleset) {
  @media(orientation: portrait) {
    &.device-iphone-x {
      @ruleset();
    }
  }
}
.safe-areas-landscape(@ruleset) {
  @media(orientation: landscape) {
    &.device-iphone-x {
      @ruleset();
    }
  }
}
.safe-area-left(@ruleset) {
  .ios-left-edge,
  .ios-edges,
  .popup,
  .sheet-modal,
  .panel-left {
    @ruleset();
  }
}
.safe-area-right(@ruleset) {
  .ios-right-edge,
  .ios-edges,
  .popup,
  .sheet-modal,
  .panel-right {
    @ruleset();
  }
}

// Scrollable
.scrollable() {
  overflow: auto;
  -webkit-overflow-scrolling: touch;
}
.not-scrollable() {
  overflow: hidden;
  -webkit-overflow-scrolling: auto;
}
// Disabled
.disabled() {
  opacity: 0.55;
  pointer-events: none;
}
// Modal Backdrops
.modal-backdrop() {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background: rgba(0,0,0,0.4);
  z-index: 13000;
  visibility: hidden;
  opacity: 0;
  transition-duration: 400ms;
  &.not-animated {
    transition-duration: 0ms;
  }
  &.backdrop-in {
    visibility: visible;
    opacity: 1;
  }

}
// No Hairlines
.no-hairlines() {
  &.no-hairlines, &.no-hairlines ul, .md &.no-hairlines-md, .md &.no-hairlines-md ul, .ios &.no-hairlines-ios, .ios &.no-hairlines-ios ul {
    .hairline-remove(top);
    .hairline-remove(bottom);
  }
  &.no-hairline-top, &.no-hairline-top ul, .md &.no-hairline-top-md, .md &.no-hairline-top-md ul, .ios &.no-hairline-top-ios, .ios &.no-hairline-top-ios ul {
    .hairline-remove(top);
  }
  &.no-hairline-bottom, &.no-hairline-bottom ul, .md &.no-hairline-bottom-md, .md &.no-hairline-bottom-md ul, .ios &.no-hairline-bottom-ios, .ios &.no-hairline-bottom-ios ul {
    .hairline-remove(bottom);
  }
}
.no-hairlines-between() {
  &.no-hairlines-between,
  .md &.no-hairlines-between-md,
  .ios &.no-hairlines-between-ios {
    .item-inner,
    .list-button,
    .item-divider,
    .list-group-title,
    .list-group-title {
      .hairline-remove(bottom);
    }
    &.simple-list li {
      .hairline-remove(bottom);
    }
    &.links-list a {
      .hairline-remove(bottom);
    }
  }
}
// Hairlines
.hairline-pseudo(@color, @top, @right, @bottom, @left) {
  content: '';
  position: absolute;
  background-color: @color;
  display: block;
  z-index: 15;
  top: @top;
  right: @right;
  bottom: @bottom;
  left: @left;
}
.hairline(@position, @color) when (@position = top) {
  &:before {
    .hairline-pseudo(@color, 0, auto, auto, 0);
    height: 1px;
    width: 100%;
    transform-origin: 50% 0%;
    html.device-pixel-ratio-2 & {
      transform: scaleY(0.5);
    }
    html.device-pixel-ratio-3 & {
      transform: scaleY(0.33);
    }
  }
}
.hairline-root(@selector, @position, @color) when (@position = top) {
  @selectorEscaped: e(@selector);
  @{selectorEscaped}:before {
    .hairline-pseudo(@color, 0, auto, auto, 0);
    height: 1px;
    width: 100%;
    transform-origin: 50% 0%;
  }
  &.device-pixel-ratio-2 @{selectorEscaped}:before {
    transform: scaleY(0.5);
  }
  &.device-pixel-ratio-3 @{selectorEscaped}:before {
    transform: scaleY(0.33);
  }
}
.hairline(@position, @color) when (@position = left) {
  &:before {
    .hairline-pseudo(@color, 0, auto, auto, 0);
    width: 1px;
    height: 100%;
    transform-origin: 0% 50%;
    html.device-pixel-ratio-2 & {
      transform: scaleX(0.5);
    }
    html.device-pixel-ratio-3 & {
      transform: scaleX(0.33);
    }
  }
}
.hairline-root(@selector, @position, @color) when (@position = left) {
  @selectorEscaped: e(@selector);
  @{selectorEscaped}:before {
    .hairline-pseudo(@color, 0, auto, auto, 0);
    width: 1px;
    height: 100%;
    transform-origin: 0% 50%;
  }
  &.device-pixel-ratio-2 @{selectorEscaped}:before {
    transform: scaleX(0.5);
  }
  &.device-pixel-ratio-3 @{selectorEscaped}:before {
    transform: scaleX(0.33);
  }
}
.hairline(@position, @color) when (@position = bottom) {
  &:after {
    .hairline-pseudo(@color, auto, auto, 0, 0);
    height: 1px;
    width: 100%;
    transform-origin: 50% 100%;
    html.device-pixel-ratio-2 & {
      transform: scaleY(0.5);
    }
    html.device-pixel-ratio-3 & {
      transform: scaleY(0.33);
    }
  }
}
.hairline-root(@selector, @position, @color) when (@position = bottom) {
  @selectorEscaped: e(@selector);
  @{selectorEscaped}:after {
    .hairline-pseudo(@color, auto, auto, 0, 0);
    height: 1px;
    width: 100%;
    transform-origin: 50% 100%;
  }
  &.device-pixel-ratio-2 @{selectorEscaped}:after {
    transform: scaleY(0.5);
  }
  &.device-pixel-ratio-3 @{selectorEscaped}:after {
    transform: scaleY(0.33);
  }
}
.hairline(@position, @color) when (@position = right) {
  &:after {
    .hairline-pseudo(@color, 0, 0, auto, auto);
    width: 1px;
    height: 100%;
    transform-origin: 100% 50%;
    html.device-pixel-ratio-2 & {
      transform: scaleX(0.5);
    }
    html.device-pixel-ratio-3 & {
      transform: scaleX(0.33);
    }
  }
}
.hairline-root(@selector, @position, @color) when (@position = right) {
  @selectorEscaped: e(@selector);
  @{selectorEscaped}:after {
    .hairline-pseudo(@color, 0, 0, auto, auto);
    width: 1px;
    height: 100%;
    transform-origin: 100% 50%;
  }
  &.device-pixel-ratio-2 @{selectorEscaped}:after {
    transform: scaleX(0.5);
  }
  &.device-pixel-ratio-3 @{selectorEscaped}:after {
    transform: scaleX(0.33);
  }
}
// For right and bottom
.hairline-remove(@position) when not (@position = left) and not (@position = top) {
  &:after {
    display: none !important;
  }
}
// For left and top
.hairline-remove(@position) when not (@position = right) and not (@position = bottom) {
  &:before {
    display: none !important;
  }
}
// For right and bottom
.hairline-color(@position, @color) when not (@position = left) and not (@position = top) {
  &:after {
    background-color: @color;
  }
}
// For left and top
.hairline-color(@position, @color) when not (@position = right) and not (@position = bottom) {
  &:before {
    background-color: @color;
  }
}
// SVG BG
.svg-background(@svg) {
  @url: framework7_encodeURIComponent(@svg);
  background-image: url("data:image/svg+xml;charset=utf-8,@{url}");
}
// MD Active Active Links Highlights
.md-link-highlight(@color:rgba(255,255,255,0.15)) {
  &:before {
    content: '';
    width: 152%;
    height: 152%;
    position: absolute;
    left: -26%;
    top: -26%;
    background-image: radial-gradient(circle at center, @color 66%, rgba(255,255,255,0) 66%);
    background-repeat: no-repeat;
    background-position: center;
    background-size: 100% 100%;
    opacity: 0;
    pointer-events: none;
    transition-duration: 600ms;
  }
  &.active-state:before {
    opacity: 1;
    transition-duration: 150ms;
  }
}

// MD Bars Shadow
.md-bar-shadow-remove() {
  &:after, &:before {
    display: none;
  }
}
.md-bar-shadow-to-bottom() {
  &:before {
    content: '';
    position: absolute;
    right: 0;
    width: 100%;
    top: 100%;
    bottom: auto;
    height: 10px;
    pointer-events: none;
    background: linear-gradient(to bottom,
      rgba(0,0,0,0.3) 0%,
      rgba(0,0,0,0.1) 40%,
      rgba(0,0,0,0.05) 50%,
      rgba(0,0,0,0) 80%,
      rgba(0,0,0,0) 100%
      );
  }
}
.md-bar-shadow-to-top() {
  &:after {
    content: '';
    position: absolute;
    right: 0;
    width: 100%;
    bottom: 100%;
    height: 10px;
    top: auto;
    pointer-events: none;
    background: linear-gradient(to top,
      rgba(0,0,0,0.3) 0%,
      rgba(0,0,0,0.1) 40%,
      rgba(0,0,0,0.05) 50%,
      rgba(0,0,0,0) 80%,
      rgba(0,0,0,0) 100%
      );
  }
}
.md-bar-no-shadow() {
  &:after, &:before {
    display: none;
  }
}
.coreIconsFont() {
  font-family: Framework7CoreIcons;
  font-weight: normal;
  font-style: normal;
  line-height: 1;
  letter-spacing: normal;
  text-transform: none;
  white-space: nowrap;
  word-wrap: normal;
  direction: ltr;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  -moz-osx-font-smoothing: grayscale;
  font-feature-settings: "liga";
  text-align: center;
  display: block;
  width: 100%;
  height: 100%;
  font-size: 20px;
}